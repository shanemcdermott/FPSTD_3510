using UnityEngine;
using System.Collections;
using System;

public class EnemyMovement : MonoBehaviour, IRespondsToDeath
{
    
    public float speed = 2f;
	public float nodeChangeValue = 0.75f;

	private TileMap map;
	public GameObject target;
	private Vector3[] mapPath; //path generated by the tileMap
	private Vector3[] pathToTarget; //path to mapPath (or something functionaly similar)
	private Vector3 nextPosition; //position of the next node to travel to
	private int pathIndex = 0; // index of the node on the path that is being travelled to 

    void Awake ()
    {
        GetComponent<HealthComponent>().RegisterDeathResponder(this);
    }

    public void AssignTarget(GameObject targetObject)
    {
        target = targetObject;
    }


    //Move Towards Target
    void Update ()
    {
		if (map != null)
			mapPath = map.getVector3Path ();

		if (mapPath == null)
			return;

		Vector3 targetPos;// = target.gameObject.transform.position;
		targetPos = mapPath [mapPath.Length - 1];

		if (pathToTarget == null) {
			int sxloc, szloc, txloc, tzloc;
			map.nodeAtLocation (gameObject.transform.position, out sxloc, out szloc);

			if (sxloc == -1 || szloc == -1)//enemy is off grid
			return;

			map.nodeAtLocation (targetPos, out txloc, out tzloc);
			pathToTarget = map.getAStarPath (map.getBoolGridFromTileMap (), szloc, szloc, txloc, tzloc);
		}

		if (pathToTarget == null)
			return;

		nextPosition = pathToTarget [pathIndex];
		if (target != null && nextPosition != null)
        {
			if (pathIndex + 1 < pathToTarget.Length && (gameObject.transform.position - nextPosition).magnitude < map.getTileWidth () * nodeChangeValue)
				pathIndex++;
			
			nextPosition = pathToTarget [pathIndex];
            
			float zDiff = nextPosition.z - this.transform.position.z;
			float xDiff = nextPosition.x - this.transform.position.x;
            this.transform.localEulerAngles = new Vector3(0, (Mathf.Atan2(xDiff, zDiff) / Mathf.PI * 180), 0);
            this.transform.Translate(new Vector3(0, 0, speed * Time.deltaTime));
			GetComponent<Animator>().SetBool("isWalking", true);
        }
    }

    public void OnDeath(DamageContext context)
    {
        enabled = false;
    }

	public void setTileMap(TileMap tm)
	{
		map = tm;
	}
}
